{"version":3,"sources":["drill_lookup.json","drill.ts"],"names":["module","exports","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],"mappings":"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","file":"drill.77cb0304.js","sourceRoot":"../src","sourcesContent":["module.exports={\"#80\":.0135,\"#79\":.0145,\"#78\":.016,\"#77\":.018,\"#76\":.02,\"#75\":.021,\"#74\":.0225,\"#73\":.024,\"#72\":.025,\"#71\":.026,\"#70\":.028,\"#69\":.0292,\"#68\":.031,\"#67\":.032,\"#66\":.033,\"#65\":.035,\"#64\":.036,\"#63\":.037,\"#62\":.038,\"#61\":.039,\"#60\":.04,\"#59\":.041,\"#58\":.042,\"#56\":.0465,\"#55\":.052,\"#54\":.055,\"#53\":.0595,\"#52\":.0635,\"#51\":.067,\"#50\":.07,\"#49\":.073,\"#48\":.076,\"#47\":.0785,\"#46\":.081,\"#45\":.082,\"#44\":.086,\"#43\":.089,\"#42\":.0935,\"#41\":.096,\"#40\":.098,\"#39\":.0995,\"#38\":.1015,\"#37\":.104,\"#36\":.1065,\"#35\":.11,\"#34\":.111,\"#33\":.113,\"#32\":.116,\"#31\":.12,\"#30\":.1285,\"#29\":.136,\"#28\":.1405,\"#27\":.144,\"#26\":.147,\"#25\":.1495,\"#24\":.152,\"#23\":.154,\"#22\":.157,\"#21\":.159,\"#20\":.161,\"#19\":.166,\"#18\":.1695,\"#17\":.173,\"#16\":.177,\"#15\":.18,\"#14\":.182,\"#13\":.185,\"#12\":.189,\"#11\":.191,\"#10\":.1935,\"#9\":.196,\"#8\":.199,\"#7\":.201,\"#6\":.204,\"#5\":.2055,\"#4\":.209,\"#3\":.213,\"#2\":.221,\"#1\":.228,A:.234,B:.238,C:.242,D:.246,E:.25,F:.257,G:.261,H:.266,I:.272,J:.277,K:.281,L:.29,M:.295,N:.302,O:.316,P:.323,Q:.332,R:.339,S:.348,T:.358,U:.368,V:.377,W:.386,X:.397,Y:.404,Z:.413};","import drillLookup from \"./drill_lookup.json\"\nconst DrillLookup = drillLookup as {\n    [key: string]: number\n};\n\nvar possibleEvents = new Set([\"input\", \"onpropertychange\", \"keyup\", \"change\", \"paste\"]);\n\nwindow.onload = () => {\n    const materialsMenu = document.getElementById(\"material\") as HTMLSelectElement;\n    const drillInput = document.getElementById(\"drill_diameter\") as HTMLInputElement;\n    const calculator: Calculator = new Calculator(materialsMenu, drillInput)\n    possibleEvents.forEach((eventName: string) => {\n        drillInput.addEventListener(eventName, () => {\n            calculator.calc()\n        })\n    });\n    materialsMenu.onchange = () => {\n        calculator.calc();\n    }\n    // calcs value on page reload if something was already entered\n    calculator.calc();\n};\n\ninterface DrillReco {\n    rpm: number;\n    ipm: number;\n    maxDepth: number;\n}\n\nclass Calculator {\n    materialsMenu: HTMLOptionsCollection;\n    diameterElement: HTMLInputElement;\n\n    constructor(materialsMenu: HTMLSelectElement, diameterElement: HTMLInputElement) {\n        this.materialsMenu = materialsMenu.options;\n        this.diameterElement = diameterElement;\n    }\n\n    calc() {\n        const material = this.materialsMenu.item(this.materialsMenu.selectedIndex) as HTMLOptionElement;\n        const val = material.value;\n        const sfm = Number(val);\n\n        let input = this.diameterElement.value as string;\n        let diameter = 0.0;\n        if (input in DrillLookup) {\n            diameter = DrillLookup[input]\n            setLabel(\"diameter_note\", `${input} has a diameter of ${diameter}`)\n        } else {\n            diameter = Number(input);\n            if (!diameter) {\n                setLabel(\"diameter_note\", \"Enter diameter like .25, A or #23\")\n            } else {\n                setLabel(\"diameter_note\", `Diameter ${diameter}`)\n            }\n        }\n\n\n        let reco = recommend(sfm, diameter);\n\n        setLabel(\"sfm\", sfm)\n        setLabel(\"rpm\", reco.rpm)\n        setLabel(\"ipm\", reco.ipm.toFixed(1))\n        setLabel(\"depth\", reco.maxDepth.toFixed(3))\n    }\n}\n\nexport function recommend(sfm: number, diameter: number): DrillReco {\n    const ipr = Math.min(.25, .001 * (diameter / .0625))\n    const rpm = Math.round((3.8197 / diameter) * sfm)\n    return { rpm: rpm, ipm: ipr * rpm, maxDepth: diameter * 4 }\n}\n\nfunction setLabel(id: string, value: number | string) {\n    const output = document.getElementById(id) as HTMLLabelElement;\n    output.innerHTML = String(value)\n}\n"]}