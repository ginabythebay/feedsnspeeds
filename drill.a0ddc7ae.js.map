{"version":3,"sources":["data/drill_lookup.json","data/material_lookup.json","drill.ts"],"names":["module","exports"],"mappings":"AAAAA,ACAAA,MDAM,ACAA,CDACC,ACAAA,ODAP,ACAA,GDAiB,ACAA;ADCf,ACAE,SDAK,KCAO,CDDC;AAEf,ACAM,SDAC,MAFQ,wBCE0B;ADCzC,ACAU,SDAH,KAHQ,KCGQ,CADkB;ADEzC,ACAU,SDAH,KAJQ,KCIQ;ADCvB,ACHyC,KAD3B,IDIP,IALQ;AAMf,ACAM,SDAC,KANQ,UCMW;ADC1B,ACAU,SDAH,MAPQ,ICOQ,CADG;ADE1B,ACAU,SDAH,KARQ,KCQQ;ADCvB,ACH0B,SDGnB,KATQ;AAUf,ACTc,GADC,MDUR,KAVQ;AAWf,ACAE,SDAK,KAXQ,OCWM;ADCrB,ACAM,ACZR,IAAA,KFYS,MAZQ,KCYO,GCZxB,GAAA,eAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;AFaE,ACAU,SDAH,KAbQ,KCaQ,CADD;ADEtB,ACAU,ACbZ,IAAM,KFaG,KAdQ,CECA,GAAG,CDaK,kBCbL,CAAA,OAApB;AFcE,ACHsB,SDGf,KAfQ;AAgBf,ACLqB,ACPvB,IAAA,KFYS,KAhBQ,YEIjB,GAAA,eAAA,CAAA,OAAA,CAAA,6BAAA,CAAA,CAAA;AFaE,ACjBe,CAAjB,QDiBS,KAjBQ;AAkBf,AEbF,IAAM,KFaG,KAlBQ,IEKG,GAAG,sBAAA,CAAA,OAAvB,EAeA;AFDE,SAAO,KAnBQ;AAoBf,AECF,IAAM,KFDG,IECM,CFrBE,EEqBC,CACd;AFDF,AEEM,EAAA,OFFC,IArBQ,AEuBE,EAAE,CADjB;AFAF,AEEM,EAAA,OFFC,IEEU,CFxBF,CEwBI,IAFjB;AFCF,AEEM,EAAA,KAAK,EFFJ,AEEM,IAHX,CFtBa;AAwBf,AEEM,EAAA,KAAK,EFFJ,AEEM,MF1BE;AAyBf,AEHE,CADc,EAOd,MFHK,KAzBQ;AA0Bf,AEGM,EAAA,OFHC,IEGU,CF7BF,CE6BI,IADjB;AFDF,AEGM,EAAA,OFHC,IEGU,EF9BF,AE8BI,IAFjB;AFAF,AEGM,EAAA,KAAK,EFHJ,AEGM,IAHX,EF5Ba;AA6Bf,AEGM,EAAA,KAAK,EFHJ,AEGM,KFhCE;AA8Bf,AEFE,CAPc,EAad,MFJK,IA9BQ;AA+Bf,AEIM,EAAA,OFJC,IEIU,CFnCF,CEmCI,IADjB;AFFF,AEIM,EAAA,OFJC,IEIU,CFpCF,CEoCI,IAFjB;AFDF,AEIM,EAAA,KAAK,EFJJ,AEIM,IAHX,EFlCa;AAkCf,AEIM,EAAA,KAAK,EFJJ,AEIM,KFtCE;AAmCf,AEDE,CAbc,EAmBd,MFLK,KAnCQ;AAoCf,AEKM,EAAA,OFLC,IEKU,CFzCF,CEyCI,IADjB;AFHF,AEKM,EAAA,OFLC,IEKU,CF1CF,CE0CI,IAFjB;AFFF,AEKM,EAAA,KAAK,EFLJ,AEKM,IAHX,EFxCa;AAuCf,AEKM,EAAA,KAAK,EFLJ,AEKM,KF5CE;AAwCf,AEAE,CAnBc,EAyBd,MFNK,KAxCQ;AAyCf,AEMM,EAAA,OFNC,IEMU,EF/CF,AE+CI,IADjB;AFJF,AEMM,EAAA,OFNC,IEMU,EFhDF,AEgDI,CAFjB;AFHF,AEMM,EAAA,KAAK,EFNJ,AEMM,IAHX,CF9Ca;AA4Cf,AEMM,EAAA,KAAK,EFNJ,AEMM,MFlDE;AA6Cf,AECE,CAzBc,CAAlB,OFwBS,IA7CQ;AA8Cf,AEQF,IAAM,KFRG,KA9CQ,AEsDD,GAAG,yBAAnB;AFPE,AEQF,IAAM,IAAI,CFRD,EEQI,GFvDI,iBEuDjB;AFPE,AESF,IAAI,KFTK,KAhDQ,IEyDC,GAAG,IAAI,GAAJ,CAAQ,CAAC,OAAD,EAAU,kBAAV,EAA8B,OAA9B,EAAuC,QAAvC,EAAiD,OAAjD,CAAR,CAArB;AFRE,SAAO,IAjDQ;AAkDf,AESF,MAAM,CAAC,EFTE,IEST,EF3DiB,CE2DD,YAAA;AFRd,AESE,MAAM,GFTD,KAnDQ,KE4DM,GAAG,QAAQ,CAAC,cAAT,CAAwB,UAAxB,CAAtB;AFRF,AESE,MAAM,GFTD,MApDQ,AE6DE,GAAG,QAAQ,CAAC,cAAT,CAAwB,eAAxB,CAAlB;AFRF,AESE,MAAM,GFTD,KArDQ,EE8DG,GAAG,QAAQ,CAAC,cAAT,CAAwB,gBAAxB,CAAnB;AFRF,AESE,MAAM,GFTD,KAtDQ,EE+DG,GAAe,IAAI,UAAJ,CAAe,SAAf,EAA0B,UAA1B,CAA/B;AFRF,AESE,MAAM,GFTD,CESK,GAAc,EFhEX,EEgEe,SAAJ,CAAc,aAAd,EAA6B,SAA7B,CAAxB;AFRF,AESE,EAAA,OFTK,KAxDQ,EEiEC,CAAC,OAAf,CAAuB,UAAC,SAAD,EAAkB;AFR3C,AESM,IAAA,KFTC,KAzDQ,AEkEC,CAAC,gBAAX,CAA4B,SAA5B,EAAuC,YAAA;AFR7C,AESU,MAAA,GFTH,KA1DQ,EEmEK,CAAC,IAAX;AFRV,AESO,KAFD,IFPC,KA3DQ;AA4Df,AESG,GAJD,MFLK,KA5DQ;AA6Df,SAAO,KA7DQ;AA8Df,AESE,OAAK,EFTA,EESI,CAAT,GFvEa,CEuEC,cAAd,EAA8B;AFRhC,AESM,QAAM,CFTL,KA/DQ,AEwEG,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AFRN,AESM,IAAA,KFTC,CESK,CAAC,GFzEE,CEyET,GAAc,CAAd;AFRN,AESM,IAAA,KFTC,IAjEQ,IE0EI,CAAC,OAAd,CAAsB,GAAtB,CAA0B,MAA1B;AFRN,AESG,SFTI,KAlEQ;AAmEf,SAAO,KAnEQ;AAoEf,AESE,EAAA,OFTK,KApEQ,CE6EA,CAAC,QAAd,GAAyB,YAAA;AFR3B,AESM,IAAA,IAAI,CFTH,AESI,KF9EI,ME8ET;AFRN,AESM,IAAA,KFTC,KESS,CF/ED,AE+EE,IAAX;AFRN,AESG,GAHD,KFNI,KAvES;AAwEf,QAAM,KAxES;AAyEf,AEQE,EAAA,IAAI,CAAC,CFRD,KAzES,KEiFb;AFPF,QAAM,KA1ES;AA2Ef,AEQE,EAAA,MFRI,GEQK,CAAC,EFnFG,MEmFb,GAAqB,YAAA;AFPvB,AEQM,IAAA,IFRA,KA5ES,CEoFC,CAAC,IAAX;AFPN,AEQG,GAFD,CAxBY,CA2BZ,GFTI,KA7ES;AA8Ef,QAAM,KA9ES;AA+Ef,QAAM,KA/ES;AAgFf,AEOE,EAAA,KFPG,KAhFU,AEuFH,CAAC,IAAX;AFNF,AEOD,CA7BD,MFsBO,KAjFU;AAkFf,OAAK,KAlFU;AAmFf,AEaF,IAAA,GFbO,KAnFU,CEgGjB;AFZE,AEYF,OFZO,IApFU;AAqFf,AEWF,OFXO,KArFU,AEgGjB;AFVE,AEcE,OFdG,IEcH,CFpGa,QEoGb,CAAY,aAAZ,EAA8C,SAA9C,EAA0E;AFb5E,AEcM,OFdD,EEcM,GFrGI,UEqGT,GAAqB,aAArB;AFbN,AEcM,OFdD,EEcM,GFtGI,MEsGT,GAAiB,SAAjB;AFbN,AEcG,OFdE,KAzFU;AA0Ff,OAAK,KA1FU;AA2Ff,AEcE,EAAA,KFdG,IA3FU,AEyGb,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AFbF,AEaE,OFbG,CEaH,IFzGa,CEyGb,GAAA,IAAA;AFZF,OAAK,KA7FU;AA8Ff,AEYM,IAAA,GFZD,KA9FU,KE0GI,CAAC,KAAK,SAAN,CAAb;AFXN,AEYM,OFZD,CEYO,IF3GG,IE2GK,GAAG,KAAK,aAAL,CAAmB,IAAnB,CAAwB,KAAK,aAAL,CAAmB,aAA3C,CAAjB;AFXN,AEYM,OFZD,CEYO,IF5GG,CE4GE,GAAG,cAAc,CAAC,QAAQ,CAAC,IAAV,CAA5B;AFXN,AEYM,IAAA,GFZD,GEYO,CAAC,CF7GE,GE6GT,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,UAAA,IAAA,EAAI;AFXrC,AEYU,OFZL,GEYW,EF9GD,IE8GO,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AFXV,AEYU,OFZL,GEYW,EF/GD,CE+GI,GAAG,KAAK,CAAC,IAAD,CAAL,CAAY,WAAZ,CAAZ;AFXV,AEYU,MAAA,CFZL,KApGU,AEgHC,CAAC,IAAP,GAAiB,IAAI,GAAA,IAAJ,GAAS,GAAT,GAAY,GAA7B;AFXV,AEYU,MAAA,CFZL,KArGU,AEiHC,CAAC,IAAP,GAAc,KAAK,CAAC,IAAD,CAAnB;AFXV,OAAK,KAtGU;AAuGf,AEWU,MAAA,CFXL,IEWS,CFlHC,AEkHA,SAAL,CAAe,OAAf,CAAuB,GAAvB,CAA2B,MAA3B;AFVV,AEWO,KAND,EFLD,KAxGU;AAyGf,AEWG,GAXD,IFAG;AAzGU,CAAjB;AEoHK;AAEL,SAAA,SAAA;AAtBA,CAAA,EAAA;;AAsBC;;AAED,SAAA,aAAA,CAAuB,aAAvB,EAAuD;AACnD,MAAM,CAAC,GAAG,aAAa,CAAC,OAAd,CAAsB,MAAtB,GAA+B,CAAzC;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,CAArB,EAAwB,CAAC,EAAzB,EAA6B;AACzB,IAAA,aAAa,CAAC,MAAd,CAAqB,CAArB;AACH;AACJ;;AAAA;;AASD,IAAA,UAAA;AAAA;AAAA,YAAA;AAII,WAAA,UAAA,CAAY,UAAZ,EAA2C,eAA3C,EAA4E;AACxE,SAAK,SAAL,GAAiB,UAAU,CAAC,OAA5B;AACA,SAAK,eAAL,GAAuB,eAAvB;AACH;;AAED,EAAA,UAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACI,QAAM,UAAU,GAAG,KAAK,SAAL,CAAe,IAAf,CAAoB,KAAK,SAAL,CAAe,aAAnC,CAAnB;AACA,QAAM,IAAI,GAAG,UAAU,CAAC,IAAxB;AACA,QAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,WAAD,CAAL,CAAlB;AACA,IAAA,QAAQ,CAAC,KAAD,EAAQ,UAAU,CAAC,GAAD,CAAlB,CAAR;AAEA,QAAI,KAAK,GAAG,KAAK,eAAL,CAAqB,KAAjC;AACA,QAAI,QAAQ,GAAG,GAAf;;AACA,QAAI,KAAK,IAAI,WAAb,EAA0B;AACtB,MAAA,QAAQ,GAAG,WAAW,CAAC,KAAD,CAAtB;AACA,MAAA,QAAQ,CAAC,eAAD,EAAqB,KAAK,GAAA,qBAAL,GAA2B,QAAhD,CAAR;AACH,KAHD,MAGO;AACH,MAAA,QAAQ,GAAG,MAAM,CAAC,KAAD,CAAjB;;AACA,UAAI,CAAC,QAAL,EAAe;AACX,YAAI,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,UAAZ,CAAZ;;AACA,YAAI,KAAJ,EAAW;AACP,cAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAD,CAAN,CAAnB;;AACA,cAAI,CAAC,MAAL,EAAa;AACT,YAAA,MAAM,GAAG,CAAT;AACH;;AACD,cAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAD,CAAN,CAAxB;AACA,cAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,CAAD,CAAN,CAA1B;AACA,UAAA,QAAQ,GAAG,MAAM,GAAG,SAAS,GAAG,WAAhC;;AACA,cAAI,MAAJ,EAAY;AACR,YAAA,QAAQ,CAAC,eAAD,EAAkB,cAAY,MAAZ,GAAkB,GAAlB,GAAsB,SAAtB,GAA+B,GAA/B,GAAmC,WAAnC,GAA8C,GAA9C,GAAkD,QAAlD,GAA0D,IAA5E,CAAR;AACH,WAFD,MAEO;AACH,YAAA,QAAQ,CAAC,eAAD,EAAkB,eAAa,SAAb,GAAsB,GAAtB,GAA0B,WAA1B,GAAqC,GAArC,GAAyC,QAAzC,GAAiD,IAAnE,CAAR;AACH;AACJ,SAbD,MAaO;AACH,UAAA,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,IAAZ,CAAR;;AACA,cAAI,KAAJ,EAAW;AACP,gBAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAD,CAAN,CAAjB;AACA,YAAA,QAAQ,GAAG,EAAE,GAAG,IAAhB;AACA,YAAA,QAAQ,CAAC,eAAD,EAAkB,cAAY,EAAZ,GAAc,KAAd,GAAoB,QAAQ,CAAC,WAAT,CAAqB,CAArB,CAApB,GAA2C,IAA7D,CAAR;AACH,WAJD,MAIO;AACH,YAAA,QAAQ,CAAC,eAAD,EAAkB,6CAAlB,CAAR;AACH;AACJ;AACJ,OAzBD,MAyBO;AACH,QAAA,QAAQ,CAAC,eAAD,EAAkB,cAAY,QAAZ,GAAoB,IAAtC,CAAR;AACH;AACJ,KAzCL,CA2CI;AACA;AACA;AACA;;;AACA,IAAA,QAAQ,CAAC,KAAD,EAAQ,IAAR,CAAR;AACA,IAAA,QAAQ,CAAC,KAAD,EAAQ,IAAR,CAAR;AACA,IAAA,QAAQ,CAAC,KAAD,EAAQ,IAAR,CAAR;AACA,IAAA,QAAQ,CAAC,OAAD,EAAU,IAAV,CAAR;AAEA,QAAI,IAAI,GAAG,SAAS,CAAC,GAAD,EAAM,QAAN,EAAgB,MAAM,CAAC,IAAI,CAAC,WAAD,CAAL,CAAtB,CAApB;AAEA,IAAA,QAAQ,CAAC,KAAD,EAAQ,UAAU,CAAC,IAAI,CAAC,GAAN,CAAlB,CAAR;AACA,IAAA,QAAQ,CAAC,KAAD,EAAQ,eAAe,CAAC,IAAI,CAAC,GAAN,EAAW,CAAX,CAAvB,CAAR;AACA,IAAA,QAAQ,CAAC,KAAD,EAAQ,eAAe,CAAC,IAAI,CAAC,GAAN,EAAW,CAAX,CAAvB,CAAR;AACA,IAAA,QAAQ,CAAC,OAAD,EAAa,eAAe,CAAC,IAAI,CAAC,QAAN,EAAgB,CAAhB,CAAf,GAAiC,IAA9C,CAAR;AACH,GA1DD;;AA2DJ,SAAA,UAAA;AApEA,CAAA,EAAA;;AAsEA,SAAA,UAAA,CAAoB,KAApB,EAAiC;AAC7B,MAAI,MAAM,CAAC,KAAP,CAAa,KAAb,KAAuB,KAAK,IAAI,QAAhC,IAA4C,CAAC,KAAjD,EAAwD;AACpD,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAO,MAAM,CAAC,KAAD,CAAb;AACH;AACJ;;AAED,SAAA,eAAA,CAAyB,KAAzB,EAAwC,SAAxC,EAAyD;AACrD,MAAI,MAAM,CAAC,KAAP,CAAa,KAAb,KAAuB,KAAK,IAAI,QAAhC,IAA4C,CAAC,KAAjD,EAAwD;AACpD,WAAO,IAAP;AACH,GAFD,MAEO;AACH,WAAO,KAAK,CAAC,OAAN,CAAc,SAAd,CAAP;AACH;AACJ;;AAED,SAAA,SAAA,CAA0B,GAA1B,EAAuC,QAAvC,EAAyD,SAAzD,EAA0E;AACtE,MAAM,GAAG,GAAG,OAAO,CAAC,QAAD,EAAW,SAAX,CAAnB;AACA,MAAM,GAAG,GAAG,IAAI,CAAC,KAAL,CAAY,SAAS,QAAV,GAAsB,GAAjC,CAAZ;AACA,SAAO;AAAE,IAAA,GAAG,EAAE,GAAP;AAAY,IAAA,GAAG,EAAE,GAAjB;AAAsB,IAAA,GAAG,EAAE,GAAG,GAAG,GAAjC;AAAsC,IAAA,QAAQ,EAAE,QAAQ,GAAG;AAA3D,GAAP;AACH;;AAJD,OAAA,CAAA,SAAA,GAAA,SAAA,EAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAA,OAAA,CAAwB,QAAxB,EAA0C,SAA1C,EAA2D;AACvD,MAAI,SAAS,GAAG,CAAZ,IAAiB,SAAS,GAAG,CAAjC,EAAoC;AAChC,UAAM,IAAI,UAAJ,CAAe,6DAAf,CAAN;AACH;;AACD,OAAgB,IAAA,EAAA,GAAA,CAAA,EAAA,WAAA,GAAA,SAAhB,EAAgB,EAAA,GAAA,WAAA,CAAA,MAAhB,EAAgB,EAAA,EAAhB,EAA2B;AAAtB,QAAI,GAAG,GAAA,WAAA,CAAA,EAAA,CAAP;;AACD,QAAI,QAAQ,IAAI,GAAG,CAAC,WAAhB,KAAgC,GAAG,CAAC,WAAJ,IAAmB,CAAnB,IAAwB,QAAQ,GAAG,GAAG,CAAC,WAAvE,CAAJ,EAAyF;AACrF,UAAI,SAAS,IAAI,CAAjB,EAAoB;AAChB,eAAO,GAAG,CAAC,KAAX;AACH;;AACD,UAAI,SAAS,IAAI,CAAjB,EAAoB;AAChB,eAAO,GAAG,CAAC,KAAX;AACH;;AACD,UAAM,MAAM,GAAG,OAAO,SAAS,GAAG,CAAnB,CAAf;AACA,UAAM,KAAK,GAAG,GAAG,CAAC,KAAJ,GAAY,GAAG,CAAC,KAA9B;AACA,aAAO,GAAG,CAAC,KAAJ,GAAa,KAAK,GAAG,MAA5B;AACH;AAEJ;;AACD,QAAM,IAAI,KAAJ,CAAU,0CAAwC,QAAlD,CAAN;AACH;;AAnBD,OAAA,CAAA,OAAA,GAAA,OAAA;;AAqBA,SAAA,QAAA,CAAkB,EAAlB,EAA8B,KAA9B,EAA2C;AACvC,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAT,CAAwB,EAAxB,CAAf;AACA,EAAA,MAAM,CAAC,SAAP,GAAmB,MAAM,CAAC,KAAD,CAAzB;AACH","file":"drill.a0ddc7ae.js","sourceRoot":"../src","sourcesContent":["module.exports = {\n  \"#80\": 0.0135,\n  \"#79\": 0.0145,\n  \"#78\": 0.016,\n  \"#77\": 0.018,\n  \"#76\": 0.02,\n  \"#75\": 0.021,\n  \"#74\": 0.0225,\n  \"#73\": 0.024,\n  \"#72\": 0.025,\n  \"#71\": 0.026,\n  \"#70\": 0.028,\n  \"#69\": 0.0292,\n  \"#68\": 0.031,\n  \"#67\": 0.032,\n  \"#66\": 0.033,\n  \"#65\": 0.035,\n  \"#64\": 0.036,\n  \"#63\": 0.037,\n  \"#62\": 0.038,\n  \"#61\": 0.039,\n  \"#60\": 0.04,\n  \"#59\": 0.041,\n  \"#58\": 0.042,\n  \"#56\": 0.0465,\n  \"#55\": 0.052,\n  \"#54\": 0.055,\n  \"#53\": 0.0595,\n  \"#52\": 0.0635,\n  \"#51\": 0.067,\n  \"#50\": 0.07,\n  \"#49\": 0.073,\n  \"#48\": 0.076,\n  \"#47\": 0.0785,\n  \"#46\": 0.081,\n  \"#45\": 0.082,\n  \"#44\": 0.086,\n  \"#43\": 0.089,\n  \"#42\": 0.0935,\n  \"#41\": 0.096,\n  \"#40\": 0.098,\n  \"#39\": 0.0995,\n  \"#38\": 0.1015,\n  \"#37\": 0.104,\n  \"#36\": 0.1065,\n  \"#35\": 0.11,\n  \"#34\": 0.111,\n  \"#33\": 0.113,\n  \"#32\": 0.116,\n  \"#31\": 0.12,\n  \"#30\": 0.1285,\n  \"#29\": 0.136,\n  \"#28\": 0.1405,\n  \"#27\": 0.144,\n  \"#26\": 0.147,\n  \"#25\": 0.1495,\n  \"#24\": 0.152,\n  \"#23\": 0.154,\n  \"#22\": 0.157,\n  \"#21\": 0.159,\n  \"#20\": 0.161,\n  \"#19\": 0.166,\n  \"#18\": 0.1695,\n  \"#17\": 0.173,\n  \"#16\": 0.177,\n  \"#15\": 0.18,\n  \"#14\": 0.182,\n  \"#13\": 0.185,\n  \"#12\": 0.189,\n  \"#11\": 0.191,\n  \"#10\": 0.1935,\n  \"#9\": 0.196,\n  \"#8\": 0.199,\n  \"#7\": 0.201,\n  \"#6\": 0.204,\n  \"#5\": 0.2055,\n  \"#4\": 0.209,\n  \"#3\": 0.213,\n  \"#2\": 0.221,\n  \"#1\": 0.228,\n  \"A\": 0.234,\n  \"B\": 0.238,\n  \"C\": 0.242,\n  \"D\": 0.246,\n  \"E\": 0.25,\n  \"F\": 0.257,\n  \"G\": 0.261,\n  \"H\": 0.266,\n  \"I\": 0.272,\n  \"J\": 0.277,\n  \"K\": 0.281,\n  \"L\": 0.29,\n  \"M\": 0.295,\n  \"N\": 0.302,\n  \"O\": 0.316,\n  \"P\": 0.323,\n  \"Q\": 0.332,\n  \"R\": 0.339,\n  \"S\": 0.348,\n  \"T\": 0.358,\n  \"U\": 0.368,\n  \"V\": 0.377,\n  \"W\": 0.386,\n  \"X\": 0.397,\n  \"Y\": 0.404,\n  \"Z\": 0.413\n}\n;","module.exports = {\n    \"Aluminum\": {\n        \"6061: Solution Treated and Aged\": {\n            \"fr_offset\": 5,\n            \"drill_sfm\": 350\n        },\n        \"6061: Cold Drawn\": {\n            \"fr_offset\": 5,\n            \"drill_sfm\": 400\n        }\n    },\n    \"Stainless Steel\": {\n        \"316: 135-185\": {\n            \"fr_offset\": 1,\n            \"drill_sfm\": 50\n        }\n    }\n};","import drillLookup_ from \"./data/drill_lookup.json\"\nconst drillLookup = drillLookup_ as {\n    [key: string]: number\n};\nimport materialLookup_ from \"./data/material_lookup.json\"\nconst materialLookup = materialLookup_ as {\n    [key: string]: {\n        [key: string]: {\n            [key: string]: number\n        }\n    }\n};\n\ninterface FeedRateRange {\n    minDiameter: number  // inches, inclusive\n    maxDiameter: number  // inches, exclusive\n    minFr: number // inches per revolution\n    maxFr: number // inches per revolution\n}\n\n// Data from Machinery's Handbook 31 page 1128.\nconst feedRates = [\n    {\n        minDiameter: 0,\n        maxDiameter: .125,\n        minFr: .001,\n        maxFr: .003,\n    },\n    {\n        minDiameter: .125,\n        maxDiameter: .251,\n        minFr: .002,\n        maxFr: .006,\n    },\n    {\n        minDiameter: .251,\n        maxDiameter: .501,\n        minFr: .004,\n        maxFr: .010,\n    },\n    {\n        minDiameter: .501,\n        maxDiameter: 1.01,\n        minFr: .007,\n        maxFr: .015,\n    },\n    {\n        minDiameter: 1.01,\n        maxDiameter: 0,\n        minFr: .010,\n        maxFr: .025,\n    },\n];\n\nconst fractionRe = /((\\d+)\\s+)?(\\d+)\\/(\\d+)/;\nconst mmRe = /(\\d+(\\.\\d+)?)\\s*mm/;\n\nvar possibleEvents = new Set([\"input\", \"onpropertychange\", \"keyup\", \"change\", \"paste\"]);\n\nwindow.onload = () => {\n    const materialsMenu = document.getElementById(\"material\") as HTMLSelectElement;\n    const typesMenu = document.getElementById(\"material_type\") as HTMLSelectElement;\n    const drillInput = document.getElementById(\"drill_diameter\") as HTMLInputElement;\n    const calculator: Calculator = new Calculator(typesMenu, drillInput);\n    const page: DrillPage = new DrillPage(materialsMenu, typesMenu);\n    possibleEvents.forEach((eventName: string) => {\n        drillInput.addEventListener(eventName, () => {\n            calculator.calc()\n        })\n    });\n\n    for (let m in materialLookup) {\n        const option = document.createElement(\"option\") as HTMLOptionElement;\n        option.text = m;\n        materialsMenu.options.add(option);\n    }\n\n    materialsMenu.onchange = () => {\n        page.reloadTypes()\n        calculator.calc();\n    }\n    page.reloadTypes();\n\n    typesMenu.onchange = () => {\n        calculator.calc();\n    }\n    // calcs value on page reload if something was already entered\n    calculator.calc();\n};\n\ninterface TypeOption extends HTMLOptionElement {\n    type: {\n        [key: string]: number\n    }\n}\n\nclass DrillPage {\n    materialsMenu: HTMLSelectElement;\n    typesMenu: HTMLSelectElement;\n\n    constructor(materialsMenu: HTMLSelectElement, typesMenu: HTMLSelectElement) {\n        this.materialsMenu = materialsMenu;\n        this.typesMenu = typesMenu;\n    }\n\n    reloadTypes() {\n        removeOptions(this.typesMenu);\n        const material = this.materialsMenu.item(this.materialsMenu.selectedIndex) as HTMLOptionElement;\n        const types = materialLookup[material.text];\n        Object.keys(types).forEach(name => {\n            const option = document.createElement(\"option\") as TypeOption;\n            const sfm = types[name][\"drill_sfm\"]\n            option.text = `${name} (${sfm})`;\n            option.type = types[name];\n            this.typesMenu.options.add(option);\n        })\n    };\n\n};\n\nfunction removeOptions(selectElement: HTMLSelectElement) {\n    const L = selectElement.options.length - 1;\n    for (let i = L; i >= 0; i--) {\n        selectElement.remove(i);\n    }\n};\n\ninterface DrillReco {\n    rpm: number;\n    ipr: number;\n    ipm: number;\n    maxDepth: number;\n}\n\nclass Calculator {\n    typesMenu: HTMLOptionsCollection;\n    diameterElement: HTMLInputElement;\n\n    constructor(typessMenu: HTMLSelectElement, diameterElement: HTMLInputElement) {\n        this.typesMenu = typessMenu.options;\n        this.diameterElement = diameterElement;\n    }\n\n    calc() {\n        const typeOption = this.typesMenu.item(this.typesMenu.selectedIndex) as TypeOption;\n        const type = typeOption.type;\n        const sfm = Number(type[\"drill_sfm\"]);\n        setLabel(\"sfm\", displayNum(sfm))\n\n        let input = this.diameterElement.value as string;\n        let diameter = 0.0;\n        if (input in drillLookup) {\n            diameter = drillLookup[input]\n            setLabel(\"diameter_note\", `${input} has a diameter of ${diameter}`)\n        } else {\n            diameter = Number(input);\n            if (!diameter) {\n                let match = input.match(fractionRe);\n                if (match) {\n                    let inches = Number(match[2])\n                    if (!inches) {\n                        inches = 0\n                    }\n                    const numerator = Number(match[3])\n                    const denominator = Number(match[4])\n                    diameter = inches + numerator / denominator\n                    if (inches) {\n                        setLabel(\"diameter_note\", `Diameter ${inches} ${numerator}/${denominator}=${diameter}\"`)\n                    } else {\n                        setLabel(\"diameter_note\", `Diameter  ${numerator}/${denominator}=${diameter}\"`)\n                    }\n                } else {\n                    match = input.match(mmRe);\n                    if (match) {\n                        const mm = Number(match[1])\n                        diameter = mm / 25.4\n                        setLabel(\"diameter_note\", `Diameter ${mm}mm=${diameter.toPrecision(4)}\"`)\n                    } else {\n                        setLabel(\"diameter_note\", \"Enter diameter like .25, 1/4, 3mm, A or #23\")\n                    }\n                }\n            } else {\n                setLabel(\"diameter_note\", `Diameter ${diameter}\"`)\n            }\n        }\n\n        // the call to recommend below can throw and error if given an\n        // invalid diameter.  To avoid displaying invalid parameters,\n        // we start by zeroing out the display before the potential\n        // error.\n        setLabel(\"rpm\", \"--\")\n        setLabel(\"ipr\", \"--\")\n        setLabel(\"ipm\", \"--\")\n        setLabel(\"depth\", \"--\")\n\n        let reco = recommend(sfm, diameter, Number(type[\"fr_offset\"]));\n\n        setLabel(\"rpm\", displayNum(reco.rpm))\n        setLabel(\"ipr\", fixedDisplayNum(reco.ipr, 3))\n        setLabel(\"ipm\", fixedDisplayNum(reco.ipm, 1))\n        setLabel(\"depth\", `${fixedDisplayNum(reco.maxDepth, 3)}\"`)\n    }\n}\n\nfunction displayNum(value: number): string {\n    if (Number.isNaN(value) || value == Infinity || !value) {\n        return \"--\";\n    } else {\n        return String(value);\n    }\n}\n\nfunction fixedDisplayNum(value: number, precision: number): string {\n    if (Number.isNaN(value) || value == Infinity || !value) {\n        return \"--\";\n    } else {\n        return value.toFixed(precision);\n    }\n}\n\nexport function recommend(sfm: number, diameter: number, fr_offset: number): DrillReco {\n    const ipr = calcIpr(diameter, fr_offset);\n    const rpm = Math.round((3.8197 / diameter) * sfm)\n    return { rpm: rpm, ipr: ipr, ipm: ipr * rpm, maxDepth: diameter * 4 }\n}\n\n// diameter is inches\n// fr_offset is a value between 1 and 5\n//\n// once we find a range, we apply the fr_offset to it.  Imagining a range of 1 to 11, we distribute it like this:\n// range  fr_offset\n// 1      1\n// 2\n// 3\n// 3.5    2\n// 4\n// 5\n// 6      3\n// 7\n// 8\n// 8.5    4\n// 9\n// 10\n// 11     5\nexport function calcIpr(diameter: number, fr_offset: number): number {\n    if (fr_offset < 1 || fr_offset > 5) {\n        throw new RangeError('fr_offset must bet between 1 and 5: ${fr_offset} is invalid');\n    }\n    for (let frr of feedRates) {\n        if (diameter >= frr.minDiameter && (frr.maxDiameter == 0 || diameter < frr.maxDiameter)) {\n            if (fr_offset == 1) {\n                return frr.minFr;\n            }\n            if (fr_offset == 5) {\n                return frr.maxFr;\n            }\n            const offset = .25 * (fr_offset - 1);\n            const range = frr.maxFr - frr.minFr;\n            return frr.minFr + (range * offset);\n        }\n\n    }\n    throw new Error(`Unable to find range for diameter of ${diameter}`)\n}\n\nfunction setLabel(id: string, value: string) {\n    const output = document.getElementById(id) as HTMLLabelElement;\n    output.innerHTML = String(value)\n}\n"]}